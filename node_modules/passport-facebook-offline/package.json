{
  "_args": [
    [
      "passport-facebook-offline",
      "/home/patrick/Desktop/zinga/zwipo"
    ]
  ],
  "_from": "passport-facebook-offline@latest",
  "_id": "passport-facebook-offline@0.1.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/passport-facebook-offline",
  "_phantomChildren": {},
  "_requested": {
    "name": "passport-facebook-offline",
    "raw": "passport-facebook-offline",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/passport-facebook-offline/-/passport-facebook-offline-0.1.5.tgz",
  "_shasum": "6827b7f131ce117053565fdb8fe2dfbdbf03715c",
  "_shrinkwrap": null,
  "_spec": "passport-facebook-offline",
  "_where": "/home/patrick/Desktop/zinga/zwipo",
  "author": "",
  "bugs": {
    "url": "http://github.com/curtislacy/passport-facebook-offline/issues"
  },
  "dependencies": {
    "passport-oauth": "~0.1.2",
    "pkginfo": "0.2.x"
  },
  "description": "Facebook authentication strategy for Passport.",
  "devDependencies": {
    "vows": "0.6.x"
  },
  "directories": {},
  "dist": {
    "shasum": "6827b7f131ce117053565fdb8fe2dfbdbf03715c",
    "tarball": "https://registry.npmjs.org/passport-facebook-offline/-/passport-facebook-offline-0.1.5.tgz"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "homepage": "https://github.com/curtislacy/passport-facebook-offline#readme",
  "keywords": [
    "auth",
    "authentication",
    "authn",
    "facebook",
    "identity",
    "passport"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-facebook",
  "maintainers": [
    {
      "name": "curtis.lacy",
      "email": "curtis.lacy@grgcomponents.com"
    }
  ],
  "name": "passport-facebook-offline",
  "optionalDependencies": {},
  "readme": "# Passport-Facebook\n\n[Passport](http://passportjs.org/) strategy for authenticating with [Facebook](http://www.facebook.com/)\nusing the OAuth 2.0 API.\n\nThis module lets you authenticate using Facebook in your Node.js applications.\nBy plugging into Passport, Facebook authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Installation\n\n    $ npm install passport-facebook-offline\n\n## Usage\n\n#### Configure Strategy\n\nThe Facebook authentication strategy authenticates users using a Facebook\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a app ID, app secret, and callback URL.\n\n    passport.use(new FacebookStrategy({\n        clientID: FACEBOOK_APP_ID,\n        clientSecret: FACEBOOK_APP_SECRET,\n        callbackURL: \"http://localhost:3000/auth/facebook/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ facebookId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'facebook'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/facebook',\n      passport.authenticate('facebook'),\n      function(req, res){\n        // The request will be redirected to Facebook for authentication, so\n        // this function will not be called.\n      });\n\n    app.get('/auth/facebook/callback',\n      passport.authenticate('facebook', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n#### Extended Permissions\n\nIf you need extended permissions from the user, the permissions can be requested\nvia the `scope` option to `passport.authenticate()`.\n\nFor example, this authorization requests permission to the user's statuses and\ncheckins:\n\n    app.get('/auth/facebook',\n      passport.authenticate('facebook', { scope: ['user_status', 'user_checkins'] }),\n      function(req, res){\n        // The request will be redirected to Facebook for authentication, with\n        // extended permissions.\n      });\n\n#### Display Mode\n\nThe display mode with which to render the authorization dialog can be set by\nspecifying the `display` option.  Refer to Facebook's [OAuth Dialog](https://developers.facebook.com/docs/reference/dialogs/oauth/)\ndocumentation for more information.\n\n    app.get('/auth/facebook',\n      passport.authenticate('facebook', { display: 'touch' }),\n      function(req, res){\n        // ...\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-facebook/tree/master/examples/login).\n\n## Issues\n\nFacebook's OAuth 2.0 implementation has a [bug][1] in which the fragment `#_=_`\nis appended to the callback URL.  This appears to affect Firefox and Chrome, but\nnot Safari.  This fragment can be removed via client-side JavaScript, and [@niftylettuce](https://github.com/niftylettuce)\nprovides a suggested [workaround][2].  Developers are encouraged to direct their\ncomplaints to Facebook in an effort to get them to implement a proper fix for\nthis issue.\n[1]: https://developers.facebook.com/bugs/196125357123225\n[2]: https://github.com/jaredhanson/passport-facebook/issues/12#issuecomment-5913711\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-facebook.png)](http://travis-ci.org/jaredhanson/passport-facebook)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/curtislacy/passport-facebook-offline.git"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "version": "0.1.5"
}
